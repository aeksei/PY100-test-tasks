from typing import List, Tuple, Dict


def task_1(matrix: List[List[int]]) -> List[int]:
    """
    Дана двумерная матрица размера N на M, заполненная целыми числами.
    С помощью list comprehension найти минимальные элементы каждой строки.

    :param matrix: Двумерная матрица размера N на M, заполненная целыми числами
    :return: Список, содержащий минимальные элементы каждой строки
    """
    ...


def task_2(matrix: List[List[int]]) -> List[int]:
    """
    Дана двумерная матрица размера N на M, заполненная целыми числами.
    Найти сумму элементов каждого столбца.

    :param matrix: Двумерная матрица размера N на M, заполненная целыми числами
    :return: Список, содержащий сумму элементов каждого столбца
    """
    ...


def task_3(n: int) -> None:
    """
    Дано число n. Создайте квадратную матрицу целых чисел n * n, и заполните его по следующему правилу:
        - числа на диагонали, идущей из правого верхнего в левый нижний угол равны 1;
        - числа, стоящие выше этой диагонали, равны 0;
        - числа, стоящие ниже этой диагонали, равны 2.

    Распечатайте эту матрицу. Пример матрицы размером n = 4
        0 0 0 1
        0 0 1 2
        0 1 2 2
        1 2 2 2

    :param n: Размер квадратной матрицы
    """
    ...


def task_4(num: int) -> Tuple[bool, bool]:
    """
    Дано четырехзначное целое число.

    Определить:
        а) равна ли сумма двух первых его цифр сумме двух последних;
        б) кратна ли 7 сумма его цифр.

    :param num: Четырехзначное целое число
    :return: Ответ вернуть в виде кортежа результатов проверки пунктов а) и б)
    """
    ...


def task_5(n: int) -> Dict[int, int]:
    """
    В некоторой стране используются денежные купюры достоинством в 1, 2, 4, 8, 16, 32 и 64.
    Дано натуральное число n. Как наименьшим количеством таких денежных купюр можно выплатить сумму n
    (указать количество каждой из используемых для выплаты купюр)?

    Предполагается, что имеется достаточно большое количество купюр всех достоинств.

    :param n: Натуральное число n
    :return: Словарь где ключ - это номинал купюры, значение - количество купюр данного номинала
    """
    ...
